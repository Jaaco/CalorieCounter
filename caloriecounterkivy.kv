#: import utils kivy.utils
#:import MeshLinePlot kivy.garden.graph.MeshLinePlot


<MainWindow>:
    name: "main"
    amount_slider: slider1
    sliderlabel: sliderlabel

    on_enter:
        food_rv.data = self.data_new()

    FloatLayout:
        cols: 2
        canvas:
            Rectangle:
                source: 'A:/Desktop/Jacy/creative/Lightroom/NYC/EmpireState.jpg'
                size: self.size
                pos: self.pos
        FloatLayout:
            Label:
                text: 'Select Food'
                size_hint: 0.15, 0.1
                pos_hint: {'left': 1, 'top': 1}
                background_color: 1,0,0,1
                font_size: 0.3*self.height
            RV:
                id: food_rv
                size_hint: 0.5, 0.7
                pos_hint: {'left': 1, 'top': 0.9}

            Button:
                text: 'Add new food'
                size_hint: 0.2, 0.1
                pos_hint: {'x': 0, 'bottom': 1}
                background_normal: ''
                background_color: utils.get_color_from_hex('#fdaba0A6')
                on_release:
                    root.manager.current = 'addfood'
                on_release:
                    root.manager.transition.direction = "right"

            Button:
                text: 'Delete'
                size_hint: 0.2, 0.1
                pos_hint: {'x': 0.2, 'bottom': 1}
                background_normal: ''
                background_color: utils.get_color_from_hex('#fdaba0A6')
                on_release:
                    food_rv.data = root.data_new()
                on_release:
                    root.deleteEntry()

            Label:
                text: 'Enter grams/milliliter in the first slider or pieces/cups in the second slider'
                size_hint: 0.5, 0.1
                pos_hint: {'right': 1, 'top': 1}
                multiline: True
                font_size: 0.3*self.height

            Slider:
                id: slider1
                min: 0
                max: 200
                step: 10
                value: 0
                value_track: True
                value_track_color: utils.get_color_from_hex('#e55c4aA6')
                size_hint: 0.4, 0.1
                pos_hint: {'right': 0.95, 'top': 0.9}
                on_value: sliderlabel.text = str(int(self.value))

            Label:
                id: sliderlabel
                text: '0'
                size_hint: 0.1, 0.05
                pos_hint: {'right': 0.8, 'top': 0.8}
                canvas.before:
                    Color:
                        rgba: utils.get_color_from_hex('#fdaba0A6')
                    Rectangle:
                        pos: self.pos
                        size: self.size

            Button:
                text: "Add to today's food list"
                size_hint: 0.3, 0.15
                pos_hint: {'right': 0.9,'top': 0.7}
                background_normal: ''
                background_color: utils.get_color_from_hex('#e55c4aA6')
                on_release:
                    root.get_amount()

            Button:
                text: 'Statistics'
                pos_hint: {'right': 1, 'bottom': 0}
                size_hint: 0.2, 0.1
                background_normal: ''
                background_color: utils.get_color_from_hex('#fdaba0A6')
                on_release:
                    root.manager.transition.direction = "left"
                on_release:
                    root.manager.current = 'statistics'



<Statistics>:
    name: 'statistics'
    FloatLayout:
        canvas:
            Rectangle:
                source: 'A:/Desktop/Jacy/creative/Lightroom/NYC/EmpireState.jpg'
                size: self.size
                pos: self.pos

        BoxLayout:
            id: destination
            size_hint: 0.8, 0.9
            pos_hint: {'top': 1, 'right': 1}


        Button:
            text: 'Statistics'
            pos_hint: {'left': 1, 'bottom': 1}
            size_hint: 0.2, 0.1
            background_normal: ''
            background_color: utils.get_color_from_hex('#fdaba0FF')
            on_release:
                root.manager.transition.direction = "right"
            on_release:
                root.manager.current = 'main'
        Button:
            text: 'First Table'
            pos_hint: {'left': 1, 'top': 1}
            size_hint: 0.2, 0.1
            background_normal: ''
            background_color: utils.get_color_from_hex('#fdaba0FF')
            on_release:
                root.test_data_plotter()
        Button:
            text: 'Second Table'
            pos_hint: {'left': 1, 'top': 0.9}
            size_hint: 0.2, 0.1
            background_normal: ''
            background_color: utils.get_color_from_hex('#fdaba0FF')
            on_release:
                root.test_data_plotter()
        Button:
            text: 'Third Table'
            pos_hint: {'left': 1, 'top': 0.8}
            size_hint: 0.2, 0.1
            background_normal: ''
            background_color: utils.get_color_from_hex('#fdaba0FF')
            on_release:
                root.test_data_plotter()


<AddFood>
    name: 'addfood'
    name1: nameinp

    cal1: slider1
    prot1: slider2
    fat1: slider3
    carbs1: slider4
    pp1: slider5

    FloatLayout:
        cols: 1
        Label:
            size_hint: 1, 0.16
            pos_hint: {'left': 1, 'top': 1}
            canvas.before:
                Color:
                    rgba: utils.get_color_from_hex('#fdaba0A6')
                Rectangle:
                    pos: self.pos
                    size: self.size
        Label:
            text: 'Add a new food'
            size_hint: 0.5, 0.16
            pos_hint: {'x': 0.25, 'top': 1}
            canvas.before:
                Color:
                    rgba: utils.get_color_from_hex('#fdaba0FF')
                Rectangle:
                    pos: self.pos
                    size: self.size

        FloatLayout:
            cols: 2

            Label:
                text: 'Whats the name of the new food?'
                size_hint: 0.5, 0.14
                pos_hint: {'left': 1, 'top': 0.84}
                canvas.before:
                    Color:
                        rgba: utils.get_color_from_hex('#fdaba0A6')
                    Rectangle:
                        pos: self.pos
                        size: self.size

            TextInput:
                id: nameinp
                size_hint: 0.5, 0.14
                pos_hint: {'right': 1, 'top': 0.84}
                focus: True
                multiline: False

            Label:
                text: 'How many calories does this have? (per 100g/ml)'
                size_hint: 0.5, 0.14
                pos_hint: {'left': 1, 'top': 0.7}
                canvas.before:
                    Color:
                        rgba: utils.get_color_from_hex('#fdaba0A6')
                    Rectangle:
                        pos: self.pos
                        size: self.size
            Label:
                text: 'How much protein does it contain?'
                size_hint: 0.5, 0.14
                pos_hint: {'left': 1, 'top': 0.56}
                canvas.before:
                    Color:
                        rgba: utils.get_color_from_hex('#fdaba0A6')
                    Rectangle:
                        pos: self.pos
                        size: self.size
            Label:
                text: 'How much fat is in this food?'
                size_hint: 0.5, 0.14
                pos_hint: {'left': 1, 'top': 0.42}
                canvas.before:
                    Color:
                        rgba: utils.get_color_from_hex('#fdaba0A6')
                    Rectangle:
                        pos: self.pos
                        size: self.size
            Label:
                text: 'How many carbohydrates does it have?'
                size_hint: 0.5, 0.14
                pos_hint: {'left': 1, 'top': 0.28}
                canvas.before:
                    Color:
                        rgba: utils.get_color_from_hex('#fdaba0A6')
                    Rectangle:
                        pos: self.pos
                        size: self.size
            Label:
                text: 'How many grams or milliliter are in 1 piece or in 1 cup?'
                size_hint: 0.5, 0.14
                pos_hint: {'left': 1, 'top': 0.14}
                canvas.before:
                    Color:
                        rgba: utils.get_color_from_hex('#fdaba0A6')
                    Rectangle:
                        pos: self.pos
                        size: self.size

            Slider:
                id: slider1
                min: 0
                max: 1000
                step: 10
                value: 0
                value_track: True
                value_track_color: utils.get_color_from_hex('#e55c4aA6')
                size_hint: 0.3, 0.14
                pos_hint: {'right': 0.85, 'top': 0.7}
                on_value: sliderlabel1.text = str(int(self.value))

            Label:
                id: sliderlabel1
                text: '0'
                size_hint: 0.1, 0.14
                pos_hint: {'right': 1, 'top': 0.7}
                canvas.before:
                    Color:
                        rgba: utils.get_color_from_hex('#fdaba0A6')
                    Rectangle:
                        pos: self.pos
                        size: self.size

            Slider:
                id: slider2
                min: 0
                max: 100
                step: 10
                value: 0
                value_track: True
                value_track_color: utils.get_color_from_hex('#e55c4aA6')
                size_hint: 0.3, 0.14
                pos_hint: {'right': 0.85, 'top': 0.56}
                on_value: sliderlabel2.text = str(int(self.value))

            Label:
                id: sliderlabel2
                text: '0'
                size_hint: 0.1, 0.14
                pos_hint: {'right': 1, 'top': 0.56}
                canvas.before:
                    Color:
                        rgba: utils.get_color_from_hex('#fdaba0A6')
                    Rectangle:
                        pos: self.pos
                        size: self.size
            Slider:
                id: slider3
                min: 0
                max: 100
                step: 10
                value: 0
                value_track: True
                value_track_color: utils.get_color_from_hex('#e55c4aA6')
                size_hint: 0.3, 0.14
                pos_hint: {'right': 0.85, 'top': 0.42}
                on_value: sliderlabel3.text = str(int(self.value))

            Label:
                id: sliderlabel3
                text: '0'
                size_hint: 0.1, 0.14
                pos_hint: {'right': 1, 'top': 0.42}
                canvas.before:
                    Color:
                        rgba: utils.get_color_from_hex('#fdaba0A6')
                    Rectangle:
                        pos: self.pos
                        size: self.size
            Slider:
                id: slider4
                min: 0
                max: 100
                step: 10
                value: 0
                value_track: True
                value_track_color: utils.get_color_from_hex('#e55c4aA6')
                size_hint: 0.3, 0.14
                pos_hint: {'right': 0.85, 'top': 0.28}
                on_value: sliderlabel4.text = str(int(self.value))

            Label:
                id: sliderlabel4
                text: '0'
                size_hint: 0.1, 0.14
                pos_hint: {'right': 1, 'top': 0.28}
                canvas.before:
                    Color:
                        rgba: utils.get_color_from_hex('#fdaba0A6')
                    Rectangle:
                        pos: self.pos
                        size: self.size
            Slider:
                id: slider5
                min: 0
                max: 1000
                step: 10
                value: 0
                value_track: True
                value_track_color: utils.get_color_from_hex('#e55c4aA6')
                size_hint: 0.3, 0.14
                pos_hint: {'right': 0.85, 'top': 0.14}
                on_value: sliderlabel5.text = str(int(self.value))

            Label:
                id: sliderlabel5
                text: '0'
                size_hint: 0.1, 0.14
                pos_hint: {'right': 1, 'top': 0.14}
                canvas.before:
                    Color:
                        rgba: utils.get_color_from_hex('#fdaba0A6')
                    Rectangle:
                        pos: self.pos
                        size: self.size
        Button:
            text: 'Go Back'
            size_hint: 0.2, 0.16
            pos_hint: {'right': 1, 'top': 1}
            background_normal: ''
            background_color: utils.get_color_from_hex('#fdaba0A6')
            on_release:
                root.manager.current = 'main'
            on_release:
                root.manager.transition.direction = "left"

        Button:
            text: 'Submit Food'
            size_hint: 0.2, 0.16
            pos_hint: {'left': 1, 'top': 1}
            background_normal: ''
            background_color: utils.get_color_from_hex('#fddea0A6')
            on_press:
                root.submit_data_entry()
            on_release:
                nameinp.text = ''
                slider1.value = 0
                slider2.value = 0
                slider3.value = 0
                slider4.value = 0
                slider5.value = 0

<MyFigure>:
    FloatLayout:
        size_hint: 0.1, 0.1


<SelectableLabel>:
    # Draw a background to indicate selection
    canvas.before:
        Color:
            rgba: utils.get_color_from_hex('#e55c4aA6') if self.selected else utils.get_color_from_hex('#fdaba0A6')
        Rectangle:
            pos: self.pos
            size: self.size
<RV>:
    viewclass: 'SelectableLabel'
    SelectableRecycleGridLayout:
        id: content
        default_size: None, dp(56)
        default_size_hint: 1, None
        size_hint_y: None
        height: self.minimum_height
        orientation: 'vertical'
        multiselect: False
        touch_multiselect: False
        cols: 5


